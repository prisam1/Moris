{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRITAM\\\\ass\\\\React\\\\New folder (2)\\\\moris\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport HomePage from './Components/Home';\nimport AboutPage from './Components/About';\nimport ContactPage from './Components/Contact';\nimport SettingsPage from './Components/Setting';\nimport ColorSchemeProvider from './ColorSchemeContext';\nimport Layout from './Layout/layout';\n// import Header from './Layout/Header'\n// import Footer from './Layout/Footer'\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // const [colorScheme, setColorScheme] = useState({\n  //   backgroundColor: '',\n  //   primaryColor: '',\n  //   secondaryColor: '',\n  //   fontSize: '',\n  //   fontColor: '',\n  // });\n\n  // useEffect(() => {\n  //   // Load saved settings from local storage\n  //   const savedSettings = JSON.parse(localStorage.getItem('appSettings'));\n  //   if (savedSettings) {\n  //     setColorScheme(savedSettings);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   // Save settings to local storage\n  //   localStorage.setItem('appSettings', JSON.stringify(colorScheme));\n  // }, [colorScheme]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ColorSchemeProvider, {\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/about\",\n              element: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/settings\",\n              element: /*#__PURE__*/_jsxDEV(SettingsPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contact\",\n              element: /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","HomePage","AboutPage","ContactPage","SettingsPage","ColorSchemeProvider","Layout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PRITAM/ass/React/New folder (2)/moris/src/App.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport HomePage from './Components/Home';\nimport AboutPage from './Components/About';\nimport ContactPage from './Components/Contact';\nimport SettingsPage from './Components/Setting';\nimport  ColorSchemeProvider  from './ColorSchemeContext';\nimport Layout from './Layout/layout';\n// import Header from './Layout/Header'\n// import Footer from './Layout/Footer'\nimport './App.scss';\n\nconst App = () => {\n\n  // const [colorScheme, setColorScheme] = useState({\n  //   backgroundColor: '',\n  //   primaryColor: '',\n  //   secondaryColor: '',\n  //   fontSize: '',\n  //   fontColor: '',\n  // });\n\n  // useEffect(() => {\n  //   // Load saved settings from local storage\n  //   const savedSettings = JSON.parse(localStorage.getItem('appSettings'));\n  //   if (savedSettings) {\n  //     setColorScheme(savedSettings);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   // Save settings to local storage\n  //   localStorage.setItem('appSettings', JSON.stringify(colorScheme));\n  // }, [colorScheme]);\n\n\n  return (\n    <>\n    <ColorSchemeProvider>\n    <Layout>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/about\" element={<AboutPage />} />\n          <Route path=\"/settings\" element={<SettingsPage />} />       \n        <Route path=\"/contact\" element={<ContactPage/>}/> \n        </Routes>\n      </Router>\n      </Layout>\n    </ColorSchemeProvider>   \n    \n \n      </>\n);\n};\n\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAQC,mBAAmB,MAAO,sBAAsB;AACxD,OAAOC,MAAM,MAAM,iBAAiB;AACpC;AACA;AACA,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA,CAACH,mBAAmB;MAAAO,QAAA,eACpBJ,OAAA,CAACF,MAAM;QAAAM,QAAA,eACLJ,OAAA,CAACV,MAAM;UAAAc,QAAA,eACLJ,OAAA,CAACR,MAAM;YAAAY,QAAA,gBACLJ,OAAA,CAACT,KAAK;cAACc,IAAI,EAAC,GAAG;cAACC,OAAO,eAAEN,OAAA,CAACP,QAAQ;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzCV,OAAA,CAACT,KAAK;cAACc,IAAI,EAAC,QAAQ;cAACC,OAAO,eAAEN,OAAA,CAACN,SAAS;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/CV,OAAA,CAACT,KAAK;cAACc,IAAI,EAAC,WAAW;cAACC,OAAO,eAAEN,OAAA,CAACJ,YAAY;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvDV,OAAA,CAACT,KAAK;cAACc,IAAI,EAAC,UAAU;cAACC,OAAO,eAAEN,OAAA,CAACL,WAAW;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAC;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU;EAAC,gBAGlB,CAAC;AAET,CAAC;AAACC,EAAA,GA1CIR,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}