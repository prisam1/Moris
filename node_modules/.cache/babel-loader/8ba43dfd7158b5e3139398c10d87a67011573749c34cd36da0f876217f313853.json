{"ast":null,"code":"var _jsxFileName = \"D:\\\\PRITAM\\\\ass\\\\React\\\\New folder (2)\\\\moris\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport HomePage from './Components/Home';\nimport AboutPage from './Components/About';\nimport ContactPage from './Components/Contact';\nimport SettingsPage from './Components/Setting.js';\nimport Layout from './Layout/layout';\n// import Header from './Layout/Header'\n// import Footer from './Layout/Footer'\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [colorScheme, setColorScheme] = useState({\n    backgroundColor: '',\n    primaryColor: '',\n    secondaryColor: '',\n    fontSize: '',\n    fontColor: ''\n  });\n  useEffect(() => {\n    // Load saved settings from local storage\n    const savedSettings = JSON.parse(localStorage.getItem('appSettings'));\n    if (savedSettings) {\n      setColorScheme(savedSettings);\n    }\n  }, []);\n  useEffect(() => {\n    // Save settings to local storage\n    localStorage.setItem('appSettings', JSON.stringify(colorScheme));\n  }, [colorScheme]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/contact\",\n          children: /*#__PURE__*/_jsxDEV(ContactPage, {\n            colorScheme: colorScheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"u91Yh9zizMgwsRuPEcWe/aZ/j9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","HomePage","AboutPage","ContactPage","SettingsPage","Layout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","colorScheme","setColorScheme","backgroundColor","primaryColor","secondaryColor","fontSize","fontColor","savedSettings","JSON","parse","localStorage","getItem","setItem","stringify","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PRITAM/ass/React/New folder (2)/moris/src/App.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport HomePage from './Components/Home';\nimport AboutPage from './Components/About';\nimport ContactPage from './Components/Contact';\nimport SettingsPage from './Components/Setting.js';\nimport Layout from './Layout/layout';\n// import Header from './Layout/Header'\n// import Footer from './Layout/Footer'\nimport './App.scss';\n\nconst App = () => {\n\n  const [colorScheme, setColorScheme] = useState({\n    backgroundColor: '',\n    primaryColor: '',\n    secondaryColor: '',\n    fontSize: '',\n    fontColor: '',\n  });\n\n  useEffect(() => {\n    // Load saved settings from local storage\n    const savedSettings = JSON.parse(localStorage.getItem('appSettings'));\n    if (savedSettings) {\n      setColorScheme(savedSettings);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save settings to local storage\n    localStorage.setItem('appSettings', JSON.stringify(colorScheme));\n  }, [colorScheme]);\n  return (\n    <>\n     <Router>\n      <Routes>\n        \n       \n        <Route path=\"/contact\">\n          <ContactPage colorScheme={colorScheme} />\n        </Route>\n      </Routes>\n    </Router>\n\n  </>\n);\n};\n\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AACpC;AACA;AACA,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC;IAC7CmB,eAAe,EAAE,EAAE;IACnBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC;IACrE,IAAIJ,aAAa,EAAE;MACjBN,cAAc,CAACM,aAAa,CAAC;IAC/B;EACF,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACd;IACA0B,YAAY,CAACE,OAAO,CAAC,aAAa,EAAEJ,IAAI,CAACK,SAAS,CAACb,WAAW,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,oBACEL,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACCnB,OAAA,CAACT,MAAM;MAAA4B,QAAA,eACNnB,OAAA,CAACP,MAAM;QAAA0B,QAAA,eAGLnB,OAAA,CAACR,KAAK;UAAC4B,IAAI,EAAC,UAAU;UAAAD,QAAA,eACpBnB,OAAA,CAACJ,WAAW;YAACS,WAAW,EAAEA;UAAY;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAET,CAAC;AAEL,CAAC;AAACpB,EAAA,CApCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}